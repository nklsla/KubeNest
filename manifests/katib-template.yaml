---
apiVersion: kubeflow.org/v1beta1
kind: Experiment
metadata:
  namespace: kf-dev
  name: test-experiment-5
spec:
  objective:
    type: maximize
    goal: 0.99
    objectiveMetricName: val-acc 
    #objectiveMetricName: Validation-accuracy
    additionalMetricNames:
      #- Train-accuracy
      - train-loss
  algorithm:
    algorithmName: random
  parallelTrialCount: 2
  maxTrialCount: 2
  maxFailedTrialCount: 2
  parameters:
    - name: lr
      parameterType: double
      feasibleSpace:
        min: "0.01"
        max: "0.03"
    #- name: num-layers
    #  parameterType: int
    #  feasibleSpace:
    #    min: "2"
    #    max: "5"
    #- name: optimizer
    #  parameterType: categorical
    #  feasibleSpace:
    #    list:
    #      - sgd
    #      - adam
    #      - ftrl
  trialTemplate:
    primaryContainerName: training-container
    trialParameters:
      - name: learningRate
        description: Learning rate for the training model
        reference: lr
        #reference: learning_rate
    #  - name: numberLayers
    #    description: Number of training model layers
    #    reference: num-layers
    #  - name: optimizer
    #    description: Training model optimizer (sdg, adam or ftrl)
    #    reference: optimizer
    retain: true # test for metics overview per tria:q
    trialSpec:
      apiVersion: batch/v1
      kind: Job
      spec:
        ttlSecondsAfterFinished: 5
        template:
          metadata:
            annotations: 
              sidecar.istio.io/inject: "false"
          spec:
            imagePullSecrets:
              - name: image-registry-secret
            containers:
              - name: training-container
                image: image-registry:5000/rs-mdl
                #image: docker.io/kubeflowkatib/mxnet-mnist:latest
                command:
                  #- "python3"
                  #- "/opt/mxnet-mnist/mnist.py"
                  #- "--batch-size=64"
                  #- "--lr=${trialParameters.learningRate}"
                  #- "--num-layers=${trialParameters.numberLayers}"
                  #- "--optimizer=${trialParameters.optimizer}"
                  #- "--gpus=0"
                  #--------------------
                  - "./models"
                  - "mlp"
                  - "--lr=${trialParameters.learningRate}"
                resources:
                  requests:
                    memory: "500Mi"
                    cpu: "400m"
                  limits:
                    memory: "1Gi"
                    cpu: "4"
                    #nvidia.com/gpu: 1
            restartPolicy: Never
