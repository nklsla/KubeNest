---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-img-repo
  labels:
    app: local-img-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: local-img-repo
  template:
    metadata:
      labels:
        app: local-img-repo
    spec:
      nodeSelector:
        nodetype: storage
      volumes:
      - name: cert-vol
        secret:
          secretName: cert-secret
      - name: auth-vol
        secret:
          secretName: auth-secret
      - name: repo-vol
        persistentVolumeClaim:
          claimName: docker-repo-pvc
      containers:
        - image: registry:2.7.0
          name: local-img-repo
          imagePullPolicy: IfNotPresent
          env:
          - name: REGISTRY_AUTH
            value: "htpasswd"
          - name: REGISTRY_AUTH_HTPASSWD_REALM
            value: "Registry Realm"
          - name: REGISTRY_AUTH_HTPASSWD_PATH
            value: "/auth/htpasswd"
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: "/cert/tls.crt"
          - name: REGISTRY_HTTP_TLS_KEY
            value: "/cert/tls.key"
          ports:
            - containerPort: 5000
          volumeMounts:
          - name: cert-vol
            mountPath: "/cert"
            readOnly: true
          - name: auth-vol
            mountPath: "/auth"
            readOnly: true
          - name: repo-vol
            mountPath: "/var/lib/registry"
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
spec:
  selector:
    app: local-img-repo
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      nodePort: 31320
  clusterIP: 10.106.32.26
